dns_nameservers 9.9.9.9                                 # Use Quad9 as the name resolver, which by default blocks malicious/malware domains.
dns_v4_first on                                         # Priorize IPv4 instead of IPv6. If you don't use IPv6 this speeds up a little the resolving.
negative_dns_ttl 2 second                               # When a DNS query receives an invalid response (like 0.0.0.0), cache this response for only 2 seconds. This makes you able to query again without having to restart Squid, which is useful when you do DNS filtering.
dns_retransmit_interval 1 seconds                       # When a query fails to be completed (like due to a network problem), use 1 second as initial interval. This value is doubled each time it fails to query.

http_port 9999 ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB cert=/cygdrive/e/squid/etc/squid/myca.pem     # Set Squid's port to anything other than the default 3128, which makes it not so obvious that you're using Squid. This command also enables SSL bumping and tells it to use the myca.pem custom certificate for that.
sslcrtd_program /cygdrive/e/squid/lib/squid/ssl_crtd -s /cygdrive/e/squid/var/cache/squid_ssldb -M 4MB                              # This is required to make the SSL bumping to work.

###### General ACLs ######

acl SSL_ports   port    443                             # Only these remote ports are allowed to estabilish secure connections. Attempts to use the CONNECT method in other ports are rejected.
acl Safe_ports  port    80 443                          # Only these remote ports are allowed to have traffic. All traffic to other ports is rejected.
acl CONNECT     method  CONNECT
acl FTP         proto   FTP
acl HIER_DIRECT hier_code HIER_DIRECT
acl HIER_NONE   hier_code HIER_NONE

http_access deny FTP                                    # Deny FTP traffic. Remove this line if you actually use FTP.
http_access deny !Safe_ports                            # Deny traffic to any port not included in Safe_ports.
http_access deny CONNECT !SSL_ports                     # Deny attempts to estabilish secure connections in ports not included in SSL_ports.

acl localnet src localhost
http_access deny to_localhost                           # Deny traffic to the localhost other than Squid's traffic.
http_access deny !localnet                              # Deny any access to the proxy from outside the computer it's running on.


###### ACLs #######

acl AlwaysBlockedDomains    dstdomain '/etc/squid/ACLs/AlwaysBlockedDomains.txt'        # AlwaysBlockedDomains.txt contains a list of domains to be blocked no matter what.

include /etc/squid/includes/ASNs.conf                                                   # Include the file ASNs.conf, which contains definitions of ACLs for each ASN IP ranges. This is just to know who is the responsible for the destination IP.

acl alldst dst 0.0.0.0/0.0.0.0                                                          # Set alldst as the default ACL when no other one matches.

acl WhitelistedDomains      dstdomain '/etc/squid/ACLs/WhitelistedDomains.txt'          # WhitelistedDomains.txt contains a list of domains that should never be blocked.

#acl DomainsToBump          dstdomain '/etc/squid/ACLs/DomainsToBump.txt'               # DomainsToBump.txt contains a list of domains that should be SSL bumped. Domains not included in this list will be left intact (i.e. encrypted with the original certificate). Remove the leading # to use it.

ssl_bump bump !WhitelistedDomains #DomainsToBump                                        # SSL bump every domain not included in the WhitelistedDomains ACL. Remove the # to make it SSL bump only the domains included in the DomainsToBump ACL.

acl hasMime rep_mime_type .                                                             # Detect whether the traffic is readable (SSL bumped, plain text HTTP). The "." is the regexp for "any character". So if it doesn't match, then that means it's not readable.

acl fromGoogle      referer_regex ^https://www\.google\.com/$                           # Detect whether the domain is being accessed from Google Search. This relies on the request's referer header, so in order to detect it correctly, the browser should not be configured to remove entirely or spoof the referer header, either by the browser's settings or by any browser extension that does this.
acl fromStartpage   referer_regex ^https://www\.startpage\.com/$                        # Detect whether the domain is being accessed from Startpage. It may happen that Startpage itself removes the referer header. To prevent that, just remove the rel="noopener" attribute from the link element.
acl any_from        any-of        fromGoogle fromStartpage

acl ext_css         urlpath_regex \.css($|\?)                                           # Get the extensions of the files being accessed.
acl ext_image       urlpath_regex \.(jpe?g|png|gif|webp|ico)($|\?)
acl ext_video       urlpath_regex \.(mp4)($|\?)
acl ext_js          urlpath_regex \.js
acl mime_css        rep_mime_type ^text/css$                                            # Get the MIME types of the files being accessed.
acl mime_image      rep_mime_type ^image/(jpeg|png|gif|webp|x-icon)$
acl mime_video      rep_mime_type ^video/(mp4)$
acl pixel           urlpath_regex pixel\.                                               # Detect whether the file being accessed is a pixel image. These files are usually named "pixel". Pixel images are used as a tracking method by some sites.

acl Firefox         browser       Firefox/[6-9][0-9]\.                                  # Detect from what application the traffic is coming from. Here, more specifically, from what browser.
acl Chrome          browser       Chrome/[7-9][0-9]\.
acl any_browser     any-of        Firefox Chrome

acl image           all-of        ext_image !ext_js any_browser                         # Only include URLs from browsers with images/videos/css extensions that doesn't also include a JavaScript extension (.js).
acl video           all-of        ext_video !ext_js any_browser
acl css             all-of        ext_css   !ext_js any_browser


###### Rules #######

http_access deny  AlwaysBlockedDomains                          # Block the domains included in the AlwaysBlockedDomains list.
http_access allow WhitelistedDomains                            # Allow the domains included in the WhitelistedDomains list.

http_access allow CONNECT                                       # Allow every attempt to request an SSL connection. This is needed to filter bumped connections. After allowing the CONNECT, the reply with the real certificate to be used to encrypt is dropped, then
                                                                # Squid sends the reply with the "fake" certificate, a certificate that Squid can read, but others can't. If CONNECT isn't allowed by default, the bumping never happens, as the request is blocked before.

http_access allow any_from any_browser                          # Allow every domain accessed from search engines through the browsers. This includes only the site's HTML file, i.e. text-only. If the images and CSS also pass the requirements below,
                                                                # the page is displayed fine, but without any JavaScript. By doing this you don't need to keep whitelisting random Google results domains that you will visit only once then never again.

http_access allow css                                           # Allow requesting for URLs that include a .css extension. In this case, this refers only to the *request*. The conditions for the *reply* are below.
http_access allow image !pixel                                  # Allow requesting for URLs that include an image extension, but that don't contain a file named "pixel.*"
http_access allow video                                         # Allow requesting for URLs that include a video extension.

http_reply_access deny ext_css   !mime_css                      # Block the download of any file that includes one of the specific extensions in the URL but that it's MIME type is not of the respective file type. It's necessary
http_reply_access deny ext_image !mime_image                    # to allow the request first, because it's only in the reply that the MIME type info in present. One thing to note though is that the MIME type has to be manually
http_reply_access deny ext_video !mime_video                    # set by the remote server before replying, so it's not much unusual the MIME type not matching, which can be either because it was not set (most common) or was
                                                                # set incorrectly. This deny rule only applies to traffic that is SSL bumped, as after the SSL tunnel is estabilished, there's nothing more Squid can do.

include /etc/squid/includes/ASNsHttp_access.conf                # Include the file ASNsHttp_access.conf, which contains deny rules for each ASN ACL defined above.

http_access deny alldst                                         # Block everything else not allowed until here.


###### ACL Notes #######                                        # Notes are used to label an ACL or specific combinations of ACLs. In this case, it's being used to create
                                                                # labels to be used in the logs. The order of definition matters, in which only the first matched note is used.
note key FTP            FTP
note key Not_Safe_ports !Safe_ports
note key SSL_ports      CONNECT !SSL_ports
note key to_localhost   to_localhost !localnet
note key not_localnet   !localnet

note key AlwaysBlockedDomains   AlwaysBlockedDomains
note key From_Google            fromGoogle any_browser
note key From_Startpage         fromStartpage any_browser
note key Wrong_MIME_CSS         ext_css   !mime_css   hasMime
note key Wrong_MIME_Img         ext_image !mime_image hasMime
note key Wrong_MIME_Vid         ext_video !mime_video hasMime
note key CSS                    css
note key Image                  image
note key Video                  video

include /etc/squid/includes/ASNsNotes.conf

note key All_IPs                alldst

note key 'Blocked by DNS/IP'    HIER_NONE

note key WhitelistedDomains     WhitelistedDomains


###### Prettify Log #######

acl DomainsNotLogged    dstdomain     '/etc/squid/ACLs/DomainsNotLogged.txt'            # DomainsNotLogged.txt contains a list of domains that should never appear in the logs. This is good for cleaning noisy domains that pollute the logs.
acl desktop             urlpath_regex ^/squid-internal-static/icons/SN\.png$
access_log none DomainsNotLogged
access_log none desktop !Safe_ports

acl MS-Crypto       browser     Microsoft-CryptoAPI                                     # Windows Defender certificate validation.
acl WinHttpRequest  browser     WinHttp\.WinHttpRequest                                 # Any request made using the COM object WinHttpRequest.

acl mime_html   rep_mime_type ^text/html$
acl mime_ocsp   rep_mime_type ^application/ocsp-response$
acl any_mimes   any-of        mime_image mime_video mime_css mime_ocsp mime_html


note ipPlaceHolder  --------------- HIER_NONE
note ipPlaceHolder  ' '             HIER_DIRECT
note MIME           'text/css'      css mime_css
note MIME           'image'         image mime_image
note MIME           'video'         video mime_video
note MIME           'ocsp-response' mime_ocsp
note MIME           'text/html'     HIER_DIRECT any_from
note MIME           '---'           HIER_NONE !any_mimes
note MIME           '---'           HIER_NONE !mime_html
note MIME           'Other'         !CONNECT hasMime !any_mimes HIER_DIRECT
note MIME           '-'             CONNECT
note MIME           '---'           !CONNECT HIER_DIRECT
note Path           '--'            CONNECT
note UserAgents     Chrome          Chrome
note UserAgents     Firefox         Firefox
note UserAgents     MS-Crypto       MS-Crypto
note UserAgents     WinHttpRequest  WinHttpRequest
note UserAgents     ---             !Chrome !Firefox !MS-Crypto


###### Logs #######

debug_options ALL,0         # This disables the cache logs (not the access logs). If you need it, remove this line. If you want to debug an ACL, you can use 28,9 to show which item of a list was matched.

logformat accesslog %-19{%d/%m/%Y %H:%M:%S}tl | %-7rm | %-3>Hs | %-12.12Ss | %-51<rd | Port: %-5>rP | Dest IP: %-15.15<a%"{ipPlaceHolder}note | ACL: %"-19.19{key}note | User-agent: %-14{UserAgents}note | MIME: %"-15{MIME}note | Path: %-200>rp%"-200{Path}note 				"%-120{User-Agent}>h			(%mt)
access_log stdio:/var/log/squid/access.log accesslog
